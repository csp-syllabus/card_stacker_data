'use strict';

var core = require('@pixi/core');
var display = require('@pixi/display');
var graphics = require('@pixi/graphics');
var sprite = require('@pixi/sprite');

class MaskedFrame extends display.Container {
  constructor({
    target,
    mask,
    borderWidth,
    borderColor
  }) {
    super();
    this.target = typeof target === "string" ? new sprite.Sprite(core.Texture.from(target)) : target;
    this.targetMask = typeof mask === "string" ? new sprite.Sprite(core.Texture.from(mask)) : mask;
    this.target.addChild(this.targetMask);
    this.target.mask = this.targetMask;
    if (borderWidth) {
      this.border = new graphics.Graphics().beginFill(borderColor).drawRect(
        0,
        0,
        this.target.width + borderWidth * 2,
        this.target.height + borderWidth * 2
      );
      this.target.x = borderWidth;
      this.target.y = borderWidth;
      const borderMask = typeof mask === "string" ? new sprite.Sprite(core.Texture.from(mask)) : mask.clone();
      borderMask.width += borderWidth * 2;
      borderMask.height += borderWidth * 2;
      this.border.mask = borderMask;
      this.border.addChild(borderMask);
      this.addChild(this.border);
    }
    this.addChild(this.target);
  }
  /** TODO */
  showBorder() {
    if (!this.border)
      return;
    this.border.visible = true;
  }
  /** TODO */
  hideBorder() {
    if (!this.border)
      return;
    this.border.visible = false;
  }
}

exports.MaskedFrame = MaskedFrame;
//# sourceMappingURL=MaskedFrame.js.map
