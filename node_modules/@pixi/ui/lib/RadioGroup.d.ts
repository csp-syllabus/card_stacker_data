import { Container } from '@pixi/display';
import { ITextStyle, TextStyle } from '@pixi/text';
import { Signal } from 'typed-signals';
import { Layout, LayoutType } from './Layout';
export type GraphicsType = {
    color: number;
    fillColor?: number;
    width?: number;
    height?: number;
    radius?: number;
    padding?: number;
};
export type RadioBoxStyle = {
    bg: string | GraphicsType;
    checked: string | GraphicsType;
    textStyle?: TextStyle | Partial<ITextStyle>;
};
export type RadioBoxOptions = {
    items: string[];
    type: LayoutType;
    elementsMargin: number;
    style: RadioBoxStyle;
    selectedItem?: number;
};
/**
 * Creates a container based group of checkbox elements that can be used as radio buttons
 * @example
 * ```
 * new RadioGroup({
 *     selectedItem: 0,
 *     items: ['Option 1', 'Option 2', 'Option 3'],
 *     type: 'vertical',
 *     elementsMargin: 10,
 *     style: {
 *         bg: 'radio.png',
 *         checked: 'radio_checked.png',
 *         textStyle: {
 *             fontSize: 22,
 *             fill: 0xFFFFFF,
 *         }
 *     },
 * });
 *
 * ```
 */
export declare class RadioGroup extends Container {
    private items;
    /** TODO */
    value: string;
    /** TODO */
    selected: number;
    /** TODO */
    onChange: Signal<(selectedItemID: number, selectedVal: string) => void>;
    /** TODO */
    view: Layout;
    private readonly options;
    constructor(options: RadioBoxOptions);
    private getGraphics;
    /**
     * TODO
     * @param id
     */
    selectItem(id: number): void;
}
//# sourceMappingURL=RadioGroup.d.ts.map