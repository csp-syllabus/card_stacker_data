import { Container } from '@pixi/display';
import { Text, TextStyle } from '@pixi/text';
import { Signal } from 'typed-signals';
import { ScrollBoxOptions } from './ScrollBox';
type Offset = {
    y: number;
    x: number;
};
export type SelectItemsOptions = {
    items: string[];
    backgroundColor: number;
    hoverColor?: number;
    width?: number;
    height?: number;
    textStyle?: Partial<TextStyle>;
    radius?: number;
};
export type SelectOptions = {
    closedBG: string | Container;
    openBG?: string | Container;
    textStyle?: Partial<TextStyle>;
    selected?: number;
    selectedTextOffset?: {
        x?: number;
        y?: number;
    };
    items: SelectItemsOptions;
    scrollBoxOffset?: {
        x?: number;
        y?: number;
    };
    scrollBoxWidth?: number;
    scrollBoxHeight?: number;
    scrollBoxRadius?: number;
    scrollBox?: ScrollBoxOptions & {
        offset?: Offset;
    };
};
/**
 * Container based component that gives us a selection dropdown.
 * It is a composition of a [[Button]] and a [[ScrollBox]].
 *
 * !!! Important
 * In order scroll to work, you have to call update() method in your game loop.
 * @example
 * ```
 * new Select({
 *     closedBG: `select_closed.png`,
 *     openBG: `select_open.png`,
 *     textStyle: { fill: 0xffffff, fontSize: 20 },
 *     items: {
 *         items,
 *         backgroundColor: 0x000000,
 *         hoverColor: 0x000000,
 *         width: 200,
 *         height: 50,
 *         textStyle: { fill: 0xffffff, fontSize: 20 },,
 *         radius: 25,
 *     },
 *     selectedTextOffset: {
 *         y: -13,
 *     },
 *     scrollBox: {
 *         width: 200,
 *         height: 350,
 *         radius: 30,
 *         offset: {
 *             y: -16,
 *             x: 24,
 *         },
 *     },
 * });
 *
 * ```
 */
export declare class Select extends Container {
    private readonly closedBG;
    private readonly openBG;
    /** TODO */
    selectedText: Text;
    /** TODO */
    value: number;
    /** TODO */
    onSelect: Signal<(value: number, text: string) => void>;
    private scrollBox;
    constructor({ closedBG, textStyle, items, openBG, selected, selectedTextOffset, scrollBox, }: SelectOptions);
    /** TODO */
    toggle(): void;
    /** TODO */
    open(): void;
    /** TODO */
    close(): void;
    private convertItemsToButtons;
    /** TODO */
    update(): void;
}
export {};
//# sourceMappingURL=Select.d.ts.map