'use strict';

var core = require('@pixi/core');
var sprite = require('@pixi/sprite');
var text = require('@pixi/text');
var typedSignals = require('typed-signals');
var Switch = require('./Switch.js');

class CheckBox extends Switch.Switch {
  constructor(options) {
    const unchecked = typeof options.style.unchecked === "string" ? new sprite.Sprite(core.Texture.from(options.style.unchecked)) : options.style.unchecked;
    const checked = typeof options.style.checked === "string" ? new sprite.Sprite(core.Texture.from(options.style.checked)) : options.style.checked;
    super([unchecked, checked], options.checked ? 1 : 0);
    if (options.text) {
      this.label = new text.Text(options.text, options.style.text);
      this.label.x = unchecked.width + 10;
      this.label.y = (unchecked.height - this.label.height) / 2;
      unchecked.addChild(this.label);
      this.label = new text.Text(options.text, options.style.text);
      this.label.x = checked.width + 10;
      this.label.y = (checked.height - this.label.height) / 2;
      checked.addChild(this.label);
    }
    this.update();
    this.onChange = new typedSignals.Signal();
  }
  /** TODO */
  update() {
    this.hitArea = new core.Rectangle(0, 0, this.width, this.height);
  }
  /** TODO */
  set text(text) {
    this.label.text = text;
    this.update();
  }
  /** TODO */
  get text() {
    return this.label.text;
  }
  /** TODO */
  get checked() {
    return this.activeViewID === 1;
  }
  /** TODO */
  set checked(checked) {
    this.switch(checked ? 1 : 0);
    this.update();
  }
}

exports.CheckBox = CheckBox;
//# sourceMappingURL=CheckBox.js.map
