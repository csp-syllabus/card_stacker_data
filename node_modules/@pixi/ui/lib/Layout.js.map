{"version":3,"file":"Layout.js","sources":["../src/Layout.ts"],"sourcesContent":["import { Container } from '@pixi/display';\n\nexport type LayoutType = 'horizontal' | 'vertical';\n\nexport type LayoutOptions = {\n    elementsMargin?: number;\n    children?: Container[];\n    vertPadding?: number;\n    horPadding?: number;\n};\n\n// TODO: replace this with pixi-layout component\n/**\n * Container based element for arranging pixi containers inside it basing on their sizes\n * @example\n * ```\n * const layout = new Layout({\n *    type: 'horizontal',\n *    elementsMargin: 10,\n *    children: [\n        new Graphics().beginFill(0x000000).drawRect(0, 0, 50, 50),\n        new Graphics().beginFill(0xFFFFFF).drawRect(0, 0, 100, 100),\n *    ],\n * });\n *\n * layout.addChild(new Graphics().beginFill(0x000000).drawRect(0, 0, 50, 50));\n * ```\n */\nexport class Layout extends Container\n{\n    /** TODO */\n    public view: Container;\n    /** TODO */\n    public type: LayoutType;\n\n    /** TODO */\n    public w: number;\n    /** TODO */\n    public h: number;\n\n    /** TODO */\n    public override readonly children: Container[] = [];\n\n    private readonly options?: { type?: LayoutType } & LayoutOptions;\n\n    constructor(options?: { type?: LayoutType } & LayoutOptions)\n    {\n        super();\n\n        this.options = options;\n\n        if (options?.type)\n        {\n            this.type = options.type;\n        }\n\n        if (options?.children)\n        {\n            options.children.map((child) => this.addChild(child));\n        }\n    }\n\n    protected override onChildrenChange()\n    {\n        let x = this.options?.horPadding ?? 0;\n        let y = this.options?.vertPadding ?? 0;\n\n        const elementsMargin = this.options?.elementsMargin ?? 0;\n\n        this.children.forEach((child) =>\n        {\n            if (!this.type && x + child.width >= this.parent.width)\n            {\n                y += elementsMargin + child.height;\n                x = this.options?.horPadding ?? 0;\n\n                child.x = x;\n                child.y = y;\n\n                this.h = y;\n            }\n            else\n            {\n                child.x = x;\n                child.y = y;\n            }\n\n            switch (this.type)\n            {\n                case 'horizontal':\n                    x += elementsMargin + child.width;\n                    this.w = x;\n                    this.h = child.height;\n                    break;\n\n                case 'vertical':\n                    y += elementsMargin + child.height;\n                    this.h = y;\n                    this.w = child.width;\n                    break;\n\n                default:\n                    x += elementsMargin + child.width;\n                    this.w = x;\n                    break;\n            }\n        });\n    }\n}\n\n/**\n * Helper to generate horizontal Layout for arranging pixi containers horizontally basing on their sizes\n * @param elementsMargin\n * @param {...any} params\n * @example\n * ```\n * row(15, // margins between elements\n *     logo, // pregenerated Layout\n *     menu, // pregenerated Layout\n *     loginForm // pregenerated Layout\n * );\n * ```\n */\nexport function row(elementsMargin: number, ...params: Container[]): Layout\n{\n    const children: Container[] = [];\n\n    params.forEach((param) => children.push(param));\n\n    return new Layout({\n        type: 'horizontal',\n        elementsMargin,\n        children,\n    });\n}\n\n/**\n * Helper to generate vertical Layout for arranging pixi containers vertically basing on their sizes\n * @param elementsMargin\n * @param {...any} params\n * @example\n * ```\n * col(15, // margins between elements\n *     logo, // pregenerated Layout\n *     menu, // pregenerated Layout\n *     loginForm // pregenerated Layout\n * );\n * ```\n */\nexport function col(elementsMargin: number, ...params: Container[]): Layout\n{\n    const children: Container[] = [];\n\n    params.forEach((param) => children.push(param));\n\n    return new Layout({\n        type: 'vertical',\n        elementsMargin,\n        children,\n    });\n}\n"],"names":["Container"],"mappings":"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"}